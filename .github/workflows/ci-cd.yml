name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.3
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_PASSWORD: root
        volumes:
          - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -proot"
          --health-interval=5s
          --health-retries=30
          --restart=on-failure

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Change permissions
        run: sudo chmod -R 777 ./db/init.sql
      
      - name: Wait for MySQL to be ready
        run: |
          for i in {30..0}; do
            if mysqladmin ping -h 127.0.0.1 -u root -proot; then
              break
            fi
            echo 'MySQL is unavailable - sleeping'
            sleep 1
          done
          if [ "$i" = 0 ]; then
            echo 'MySQL did not become ready in time'
            exit 1
          fi

      - name: Run tests
        env:
          MYSQL_HOST: localhost
          MYSQL_USER: root
          MYSQL_PASSWORD: root
          MYSQL_DB: accountDB
        run: pytest tests

  # build_and_push:
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Log in to Docker Hub
  #       run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

  #     - name: Build and push Docker image
  #       run: |
  #         docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fastapiauthapp .
  #         docker push ${{ secrets.DOCKERHUB_USERNAME }}/fastapiauthapp

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build_and_push

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1
      
  #     - name: Deploy to ECS
  #       run: |
  #         aws ecs update-service --cluster fastapi-auth-app --service fastapi-auth-app-service --force-new-deployment
  
  # notify:
  #   runs-on: ubuntu-latest
  #   needs: deploy

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Send notification
  #       run: echo "Deployment completed successfully"